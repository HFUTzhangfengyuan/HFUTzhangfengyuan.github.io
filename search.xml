<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>单片机系统综合设计</title>
      <link href="/2023/02/22/%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%BC%E5%90%88%E8%AE%BE%E8%AE%A1/"/>
      <url>/2023/02/22/%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%BC%E5%90%88%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="设计目的"><a href="#设计目的" class="headerlink" title="设计目的"></a>设计目的</h2><p>设计一款农业大棚智能监测系统——温湿度及光照检测，具备网络传输数据，可对相关参量进行实时监测，超过相关阈值进行报警，通过网络&#x2F;蜂鸣器&#x2F;光等方式进行预警。并基于STM32核心板板载功能进行相关拓展。设计一个单片机，使其具有基础任务的功能，并贴合实际，尽可能的添加附加功能，代码结构要合理，功能要完善，不能误报漏报。个人目的，顺便设计一款彩色PCB，参加立创EDA的内测活动，并发布自己的第一个开源作品。</p><h2 id="单片机使用教程——设计任务"><a href="#单片机使用教程——设计任务" class="headerlink" title="单片机使用教程——设计任务"></a>单片机使用教程——设计任务</h2><h3 id="基础任务"><a href="#基础任务" class="headerlink" title="基础任务:"></a>基础任务:</h3><p>1.开机12864显示“合肥工业大学 <em>年</em>月*日”3秒；<br>2.DHT11温湿度数据采集，通过液晶屏显示；<br>3.光照传感器用于监测光照强度，通过液晶屏显示；<br>4.通过按键设置湿度、光照阈值，通过液晶屏显示；<br>5.湿度、光照在阈值范围之外，蜂鸣器报警。</p><h3 id="拓展任务"><a href="#拓展任务" class="headerlink" title="拓展任务:"></a>拓展任务:</h3><ol><li><p>通过PC的串口调试助手显示温湿度的值</p></li><li><p>通过PC的串口调试助手显示光敏的值</p></li><li><p>添加了火焰火灾传感器(波长940 红外对管接收管)</p></li><li><p>所有阈值均可通过PC的串口调试助手调节</p></li><li><p>火焰传感器参与报警</p></li><li><p>所有报警除了蜂鸣器外还具有RGB三色光报警显示</p></li><li><p>添加ESP12F烧写8266固件进行WiFi传输数据(可更换固件)&#x2F;通过蓝牙进行数据发送</p></li><li><p>火焰火灾传感器及光敏超过阈值ESP8266发送对应预警指令</p></li><li><p>采用FreeRTOS操作系统进行调度</p></li></ol><h2 id="单片机使用教程——原理框图及说明"><a href="#单片机使用教程——原理框图及说明" class="headerlink" title="单片机使用教程——原理框图及说明"></a>单片机使用教程——原理框图及说明</h2><p>硬件总体结构示意图如下图所示：</p><p><img src="/../pic/%E7%A1%AC%E4%BB%B6%E8%BF%9E%E6%8E%A5%E5%9B%BE.png" alt="硬件连接图"></p><p>（某一天突然发现忘了esp12F，以及当时的DAC芯片 但是我懒就不重新画了）</p><h2 id="单片机使用教程——主要电路说明、元件选择及参数计算"><a href="#单片机使用教程——主要电路说明、元件选择及参数计算" class="headerlink" title="单片机使用教程——主要电路说明、元件选择及参数计算"></a>单片机使用教程——主要电路说明、元件选择及参数计算</h2><h3 id="OLED模块："><a href="#OLED模块：" class="headerlink" title="OLED模块："></a>OLED模块：</h3><p><img src="/../pic/OLED%E5%B1%8F%E5%B9%95%E6%A0%B8%E5%BF%83%E7%94%B5%E8%B7%AF.png" alt="OLED模块原理图"></p><p>所有电阻电容采用0603封装，体积小的同时由于使用贴片，也更加稳定。在实际应用中也均是使用了贴片的设计。此电路 参考驱动SSD1306厂家设计，此电路为经典电路。</p><h3 id="ESP8266模块："><a href="#ESP8266模块：" class="headerlink" title="ESP8266模块："></a>ESP8266模块：</h3><p><img src="/../pic/ESP%E6%A8%A1%E5%9D%97%E7%94%B5%E8%B7%AF.png" alt="ESP8266原理图"></p><p>ESP模块则是采用了ESP12F来进行设计，相较于8266,12F价格更低，且可以烧写8266系列的固件。原理图来自于安信可科技（ESP12F厂家）的参考电路设计。</p><h3 id="串口部分："><a href="#串口部分：" class="headerlink" title="串口部分："></a>串口部分：</h3><p><img src="/../pic/PC-%E4%B8%B2%E5%8F%A3%E7%94%B5%E8%B7%AF.png" alt="串口CH340电路"></p><p>本电路也仍未经典电路了，使用TYPE-C的调试接口，在兼容供电的同时，可以进行数据传输，使用CH340C的芯片也是因为手边有，仍可进行别的元器件的替换。在实际使用中，可以直接通过STM32的串口1进行串口调试。进行数据的发送与接收。非常方便。</p><h3 id="电源管理部分："><a href="#电源管理部分：" class="headerlink" title="电源管理部分："></a>电源管理部分：</h3><p><img src="/../pic/%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86-OLED.png" alt="电源管理电路-OLED"></p><p>电源管理此电路可以输出3.3V（误差2%）具有稳压的作用。</p><p><img src="/../pic/%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86-%E6%A0%B8%E5%BF%83%E6%9D%BF.png" alt="电源管理-核心板电源管理"></p><p>此电路可以将输入的5V进行降压至3.3V。</p><h3 id="光敏电阻部分："><a href="#光敏电阻部分：" class="headerlink" title="光敏电阻部分："></a>光敏电阻部分：</h3><p><img src="/../pic/%E5%85%89%E6%95%8F%E7%94%B5%E9%98%BB%E9%87%87%E9%9B%86%E4%BC%A0%E6%84%9F%E5%99%A8%E7%94%B5%E8%B7%AF.png" alt="光敏电阻传感器采集电路"></p><p>此电路在实际应用中加入的LM393构成比较器对输入的模拟量进行比较然后在OUT口输出结果。但是在本次设计中由于需要的是采集的结果，所以并不采用他的输出的数字量，而是模拟量。</p><h3 id="火焰传感部分："><a href="#火焰传感部分：" class="headerlink" title="火焰传感部分："></a>火焰传感部分：</h3><p><img src="/../pic/%E7%81%AB%E7%84%B0%E4%BC%A0%E6%84%9F%E5%99%A8%E7%94%B5%E8%B7%AF.png" alt="火焰传感器电路图"></p><p>光敏电阻和火焰传感器的电路类似，这里就不进行赘述。</p><h3 id="温湿度采集部分："><a href="#温湿度采集部分：" class="headerlink" title="温湿度采集部分："></a>温湿度采集部分：</h3><p><img src="/../pic/%E6%B8%A9%E6%B9%BF%E5%BA%A6%E9%87%87%E9%9B%86%E4%BC%A0%E6%84%9F%E5%99%A8%E7%94%B5%E8%B7%AF.png" alt="温湿度采集原理图"></p><p>使用DHT11进行温湿度采集，DATA进行单线的数据通信。</p><p>——一点小tips：如下图的单片机系统设计拓展版所示，在板子上有关于一些数据选择的跳线帽，这是因为在STM32核心板中控制的按键只有四个，是无法进行6个量的控制的，所以在拓展版中添加了四个按键并通过跳线帽来进行控制。</p><h2 id="单片机使用教程——总体电路设计"><a href="#单片机使用教程——总体电路设计" class="headerlink" title="单片机使用教程——总体电路设计"></a>单片机使用教程——总体电路设计</h2><h3 id="核心板原理图："><a href="#核心板原理图：" class="headerlink" title="核心板原理图："></a>核心板原理图：</h3><p><img src="/../pic/%E6%A0%B8%E5%BF%83%E6%9D%BF%E5%8E%9F%E7%90%86%E5%9B%BE-1.png" alt="STM核心板原理图-1"></p><p><img src="/../pic/SCH_%E5%BD%A9%E8%89%B2%E4%B8%9D%E5%8D%B0_0-STM32_F103CBT6_2_2023-02-22.png" alt="STM核心板原理图-2"></p><h3 id="拓展版原理图："><a href="#拓展版原理图：" class="headerlink" title="拓展版原理图："></a>拓展版原理图：</h3><p><img src="/../pic/Schematic_%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E3%80%90%E5%B7%B2%E5%AE%8C%E6%88%90%E9%AA%8C%E8%AF%81%E3%80%91_2023-02-22.png" alt="单片机系统综合设计拓展版原理图"></p><h2 id="单片机使用教程——软件设计思路及框图"><a href="#单片机使用教程——软件设计思路及框图" class="headerlink" title="单片机使用教程——软件设计思路及框图"></a>单片机使用教程——软件设计思路及框图</h2><p><img src="/../pic/%E8%BD%AF%E4%BB%B6%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="软件设计流程图"></p><p>tips:本工程基于STM32CubeMX进行整体配置，基础配置相关参数这里不做说明，详细配置可参考发布在开源平台的附件，里面附带了CubeMX的工程文件。</p><p>下面针对软件相关进行代码演示：</p><p>系统初始化代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> MX_GPIO_Init();</span><br><span class="line"> MX_USART1_UART_Init();</span><br><span class="line"> MX_ADC1_Init();<span class="comment">//CubeMX系统初始化</span></span><br><span class="line"> MX_ADC2_Init();</span><br><span class="line"> MX_I2C1_Init();</span><br><span class="line"> MX_USART3_UART_Init();</span><br><span class="line"> <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line"> OLED_Init();<span class="comment">//相关外设初始化</span></span><br><span class="line">   OLED_Clear();</span><br><span class="line">HAL_Delay(<span class="number">100</span>);</span><br></pre></td></tr></table></figure><p>展示日期及汉字并停留三秒：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">OLED_ShowCHinese(<span class="number">0</span>,<span class="number">0</span>,<span class="number">13</span>);<span class="comment">//合</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">16</span>,<span class="number">0</span>,<span class="number">14</span>);<span class="comment">//肥</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">32</span>,<span class="number">0</span>,<span class="number">15</span>);<span class="comment">//工</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">48</span>,<span class="number">0</span>,<span class="number">16</span>);<span class="comment">//业</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">64</span>,<span class="number">0</span>,<span class="number">17</span>);<span class="comment">//大</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">80</span>,<span class="number">0</span>,<span class="number">18</span>);<span class="comment">//学</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">32</span>,<span class="number">2</span>,<span class="number">19</span>);<span class="comment">//年</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">54</span>,<span class="number">2</span>,<span class="number">20</span>);<span class="comment">//月</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">86</span>,<span class="number">2</span>,<span class="number">21</span>);<span class="comment">//日</span></span><br><span class="line">OLED_ShowNum(<span class="number">0</span>,<span class="number">2</span>,<span class="number">2023</span>,<span class="number">4</span>,<span class="number">16</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">48</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">16</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>,<span class="number">2</span>,<span class="number">03</span>,<span class="number">2</span>,<span class="number">16</span>);</span><br><span class="line">HAL_Delay(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p>发送ESP12FAT指令：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HAL_UART_Transmit(&amp;huart3, (<span class="type">uint8_t</span> *)<span class="string">&quot;AT+CIPMUX=1\r\n&quot;</span>, <span class="number">15</span> , <span class="number">0xffff</span>);</span><br><span class="line">HAL_Delay(<span class="number">200</span>);  <span class="comment">//延时1s  </span></span><br><span class="line">HAL_UART_Transmit(&amp;huart3, (<span class="type">uint8_t</span> *)<span class="string">&quot;AT+CIPSERVER=1,5000\r\n&quot;</span>, <span class="number">23</span> , <span class="number">0xffff</span>);</span><br><span class="line">HAL_Delay(<span class="number">200</span>);  <span class="comment">//延时1s</span></span><br><span class="line">HAL_UART_Transmit(&amp;huart3, (<span class="type">uint8_t</span> *)<span class="string">&quot;AT+CIFSR\r\n&quot;</span>, <span class="number">12</span> , <span class="number">0xffff</span>);</span><br><span class="line">HAL_Delay(<span class="number">200</span>);  <span class="comment">//延时1s  </span></span><br></pre></td></tr></table></figure><p>中断：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span><span class="comment">//触发中断，进行中断回调函数</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* 判断是哪个串口触发的中断 */</span></span><br><span class="line">    <span class="keyword">if</span>(huart -&gt;Instance == USART1||huart -&gt;Instance == USART3)</span><br></pre></td></tr></table></figure><p>解析收到的标志位并根据标志位进行相关阈值的调整：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(*recv_buf==<span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(LVAL&lt;<span class="number">3700</span>)&#123;</span><br><span class="line">LVAL+=<span class="number">100</span>;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">LVAL=<span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进行DHT11的数据通信以及两路ADC采样：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">DHT11();</span><br><span class="line">HAL_ADC_Start(&amp;hadc1);</span><br><span class="line">   HAL_ADC_PollForConversion(&amp;hadc1 ,<span class="number">50</span>);</span><br><span class="line">HAL_UART_Transmit(&amp;huart3, (<span class="type">uint8_t</span> *)<span class="string">&quot;AT+CIPSEND=0,31\r\n&quot;</span>, <span class="number">18</span> , <span class="number">0xffff</span>);</span><br><span class="line">   HAL_Delay(<span class="number">200</span>);  <span class="comment">//延时1s</span></span><br><span class="line">HAL_UART_Transmit(&amp;huart3, (<span class="type">uint8_t</span> *)<span class="string">&quot;HFUT-SCI-EIE 2020213395: hello!&quot;</span>,<span class="keyword">sizeof</span>(str), <span class="number">0xffff</span>);</span><br><span class="line">HAL_Delay(<span class="number">200</span>); </span><br><span class="line">   <span class="keyword">if</span>(HAL_IS_BIT_SET(HAL_ADC_GetState(&amp;hadc1), HAL_ADC_STATE_REG_EOC))</span><br><span class="line">   &#123;</span><br><span class="line">     Val = HAL_ADC_GetValue(&amp;hadc1);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">HAL_ADC_Start(&amp;hadc2);</span><br><span class="line">   HAL_ADC_PollForConversion(&amp;hadc2 ,<span class="number">50</span>);</span><br><span class="line">   <span class="keyword">if</span>(HAL_IS_BIT_SET(HAL_ADC_GetState(&amp;hadc2), HAL_ADC_STATE_REG_EOC))</span><br><span class="line">   &#123;</span><br><span class="line">     Val2 = HAL_ADC_GetValue(&amp;hadc2);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>将采样信号通过串口发送（串口一、串口三）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sprintf</span>(str,<span class="string">&quot;Light intensity is %d \r\n&quot;</span>,Val);</span><br><span class="line"><span class="built_in">sprintf</span>(str2,<span class="string">&quot;Flame intensity is %d \r\n&quot;</span>,Val2);</span><br><span class="line">HAL_UART_Transmit(&amp;huart1, (<span class="type">uint8_t</span> *)&amp;str,<span class="keyword">sizeof</span>(str), <span class="number">0xffff</span>);</span><br><span class="line">HAL_UART_Transmit(&amp;huart1, (<span class="type">uint8_t</span> *)&amp;str2,<span class="keyword">sizeof</span>(str2), <span class="number">0xffff</span>);</span><br><span class="line"></span><br><span class="line">HAL_UART_Transmit(&amp;huart3, (<span class="type">uint8_t</span> *)<span class="string">&quot;AT+CIPSEND=0,23\r\n&quot;</span>, <span class="number">18</span> , <span class="number">0xffff</span>);</span><br><span class="line">    HAL_Delay(<span class="number">200</span>);  <span class="comment">//延时1s</span></span><br><span class="line">HAL_UART_Transmit(&amp;huart3, (<span class="type">uint8_t</span> *)&amp;str,<span class="keyword">sizeof</span>(str), <span class="number">0xffff</span>);</span><br><span class="line">HAL_Delay(<span class="number">200</span>); </span><br></pre></td></tr></table></figure><p>四组数据是否有超过阈值，并进行OLED显示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(Val2&lt;FVAL)&#123;</span><br><span class="line">HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_RESET);</span><br><span class="line">HAL_GPIO_WritePin(GPIOB,GPIO_PIN_0,GPIO_PIN_RESET);<span class="comment">//蜂鸣器预警</span></span><br><span class="line">OLED_ShowCHinese(<span class="number">32</span>,<span class="number">2</span>,<span class="number">7</span>);</span><br><span class="line">OLED_ShowCHinese(<span class="number">48</span>,<span class="number">2</span>,<span class="number">8</span>);</span><br><span class="line">OLED_ShowCHinese(<span class="number">64</span>,<span class="number">2</span>,<span class="number">10</span>);</span><br></pre></td></tr></table></figure><p>蜂鸣器报警、串口三发送警告信息：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(Val&gt;LVAL)&#123;</span><br><span class="line">HAL_GPIO_WritePin(GPIOB,GPIO_PIN_3,GPIO_PIN_RESET);</span><br><span class="line">HAL_GPIO_WritePin(GPIOB,GPIO_PIN_0,GPIO_PIN_RESET);<span class="comment">//蜂鸣器预警</span></span><br><span class="line">HAL_UART_Transmit(&amp;huart3, (<span class="type">uint8_t</span> *)<span class="string">&quot;AT+CIPSEND=0,8\r\n&quot;</span>, <span class="number">18</span> , <span class="number">0xffff</span>);</span><br><span class="line">    HAL_Delay(<span class="number">200</span>);  <span class="comment">//延时1s</span></span><br><span class="line">HAL_UART_Transmit(&amp;huart3, (<span class="type">uint8_t</span> *)<span class="string">&quot;WARNING!&quot;</span>,<span class="number">8</span>, <span class="number">0xffff</span>);</span><br><span class="line">HAL_Delay(<span class="number">100</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断是否有按键按下，根据不同的按键进行阈值的控制</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(GPIOB,GPIO_PIN_15)==GPIO_PIN_RESET)&#123;</span><br><span class="line">HAL_Delay(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(GPIOB,GPIO_PIN_15)==GPIO_PIN_RESET)&#123;</span><br><span class="line"><span class="keyword">if</span>(LVAL&lt;<span class="number">3400</span>)&#123;</span><br><span class="line">LVAL+=<span class="number">100</span>;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">LVAL=<span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><p>DHT11通信协议解析及相关工作方式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dht11.h&quot;</span><span class="comment">//这里只附赠相关c文件代码 详细完整代码见开源平台</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">float</span> WVAL;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">float</span> SVAL; </span><br><span class="line"><span class="keyword">extern</span> UART_HandleTypeDef huart1;</span><br><span class="line"><span class="type">char</span> <span class="built_in">string</span>[<span class="number">32</span>];</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  温湿度传感器主函数</span></span><br><span class="line"><span class="comment">  * @param  void</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  </span><br><span class="line"><span class="type">uint16_t</span> data[<span class="number">5</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT11</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(DHT11_READ_DATA() == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Succeed！\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failed！！\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    HAL_Delay(<span class="number">1000</span>);                              </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  温湿度传感器启动信号发送</span></span><br><span class="line"><span class="comment">  * @param  void</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT11_START</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    DHT11_GPIO_MODE_SET(<span class="number">0</span>);                         <span class="comment">//  主机设置为输出模式</span></span><br><span class="line">    </span><br><span class="line">    DHT11_PIN_RESET;                                <span class="comment">//  主机拉低电平</span></span><br><span class="line">    </span><br><span class="line">    HAL_Delay(<span class="number">20</span>);                                  <span class="comment">//  主机等待 18 &lt; ms &gt; 30</span></span><br><span class="line">    </span><br><span class="line">    DHT11_GPIO_MODE_SET(<span class="number">1</span>);                         <span class="comment">//  主机设置为输入模式，等待DHT11答应</span></span><br><span class="line">&#125;                                                   <span class="comment">//  因为设置了上拉输入，GPIO -&gt; 1</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  读取一位数据 1bit</span></span><br><span class="line"><span class="comment">  * @param  void</span></span><br><span class="line"><span class="comment">  * @retval 0/1</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">DHT11_READ_BIT</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(!DHT11_READ_IO);                          <span class="comment">//  过度数据的低电平 </span></span><br><span class="line">    </span><br><span class="line">    Coarse_delay_us(<span class="number">40</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(DHT11_READ_IO)                               <span class="comment">//  此时如果还为高电平则数据为 1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(DHT11_READ_IO);                       <span class="comment">//  过度数据的高电平</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">else</span>                                            <span class="comment">//  若此时为低则为 0</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  读取一个字节数据 1byte / 8bit</span></span><br><span class="line"><span class="comment">  * @param  void</span></span><br><span class="line"><span class="comment">  * @retval temp</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">DHT11_READ_BYTE</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i,temp = <span class="number">0</span>;                             <span class="comment">//  暂时存储数据</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span> ;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        temp &lt;&lt;= <span class="number">1</span>;                                 </span><br><span class="line">        <span class="keyword">if</span>(DHT11_READ_BIT())                        <span class="comment">//  1byte -&gt; 8bit</span></span><br><span class="line">        &#123;</span><br><span class="line">            temp |= <span class="number">1</span>;                              <span class="comment">//  0000 0001</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  读取温湿度传感器数据 5byte / 40bit</span></span><br><span class="line"><span class="comment">  * @param  void</span></span><br><span class="line"><span class="comment">  * @retval 0/1/2</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">DHT11_READ_DATA</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    </span><br><span class="line">    DHT11_START();                                  <span class="comment">//  主机发送启动信号</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(DHT11_Check())                               <span class="comment">//  如果DHT11应答     </span></span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">while</span>(!DHT11_READ_IO);                      <span class="comment">//  过度DHT11答复信号的低电平</span></span><br><span class="line">        <span class="keyword">while</span>(DHT11_READ_IO);                       <span class="comment">//  过度DHT11答复信号的高电平</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)</span><br><span class="line">        &#123;                        </span><br><span class="line">            data[i] = DHT11_READ_BYTE();            <span class="comment">//  读取 5byte</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(data[<span class="number">0</span>] + data[<span class="number">1</span>] + data[<span class="number">2</span>] + data[<span class="number">3</span>] == data[<span class="number">4</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;当前湿度：%d.%d%%RH当前温度：%d.%d°&quot;</span>,data[<span class="number">0</span>],data[<span class="number">1</span>],data[<span class="number">2</span>],data[<span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(<span class="built_in">string</span>,<span class="string">&quot;%d.%d&quot;</span>,data[<span class="number">2</span>],data[<span class="number">3</span>]);</span><br><span class="line">OLED_ShowString(<span class="number">80</span>,<span class="number">4</span>,(<span class="type">uint8_t</span> *)<span class="built_in">string</span>,<span class="number">16</span>);</span><br><span class="line">OLED_ShowCHinese(<span class="number">112</span>,<span class="number">4</span>,<span class="number">11</span>);</span><br><span class="line"><span class="built_in">sprintf</span>(<span class="built_in">string</span>,<span class="string">&quot;%d.%d%%&quot;</span>,data[<span class="number">0</span>],data[<span class="number">1</span>]);</span><br><span class="line">OLED_ShowString(<span class="number">80</span>,<span class="number">6</span>,(<span class="type">uint8_t</span> *)<span class="built_in">string</span>,<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((data[<span class="number">2</span>]*<span class="number">10</span>+data[<span class="number">3</span>])&gt;WVAL)</span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_WritePin(GPIOB,GPIO_PIN_5,GPIO_PIN_RESET);</span><br><span class="line">HAL_GPIO_WritePin(GPIOB,GPIO_PIN_0,GPIO_PIN_RESET);<span class="comment">//蜂鸣器预警</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((data[<span class="number">0</span>]*<span class="number">10</span>+data[<span class="number">1</span>])&gt;SVAL)</span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_WritePin(GPIOB,GPIO_PIN_3,GPIO_PIN_RESET);</span><br><span class="line">HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_RESET);</span><br><span class="line">HAL_GPIO_WritePin(GPIOB,GPIO_PIN_0,GPIO_PIN_RESET);<span class="comment">//蜂鸣器预警</span></span><br><span class="line">&#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;                               <span class="comment">//  数据校验通过</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;                               <span class="comment">//  数据校验失败</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>                                            <span class="comment">//  如果DHT11不应答</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  检测温湿度传感器是否存在(检测DHT11的应答信号)</span></span><br><span class="line"><span class="comment">  * @param  void</span></span><br><span class="line"><span class="comment">  * @retval 0/1</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">DHT11_Check</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">    Coarse_delay_us(<span class="number">40</span>);</span><br><span class="line">    <span class="keyword">if</span>(DHT11_READ_IO == <span class="number">0</span>)                          <span class="comment">//  检测到DHT11应答</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>                                            <span class="comment">//  检测到DHT11不应答</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  设置引脚模式</span></span><br><span class="line"><span class="comment">  * @param  mode: 0-&gt;out, 1-&gt;in</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">DHT11_GPIO_MODE_SET</span><span class="params">(<span class="type">uint8_t</span> mode)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(mode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*  输入  */</span></span><br><span class="line">        GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">        GPIO_InitStruct.Pin = GPIO_PIN_14;                   <span class="comment">//  9号引脚</span></span><br><span class="line">        GPIO_InitStruct.Mode = GPIO_MODE_INPUT;             <span class="comment">//  输入模式</span></span><br><span class="line">        GPIO_InitStruct.Pull = GPIO_PULLUP;                 <span class="comment">//  上拉输入</span></span><br><span class="line">        HAL_GPIO_Init(GPIOB, &amp;GPIO_InitStruct);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*  输出  */</span></span><br><span class="line">        GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">        GPIO_InitStructure.Pin = GPIO_PIN_14;                <span class="comment">//  9号引脚</span></span><br><span class="line">        GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;      <span class="comment">//  Push Pull 推挽输出模式</span></span><br><span class="line">        GPIO_InitStructure.Pull = GPIO_PULLUP;              <span class="comment">//  上拉输出</span></span><br><span class="line">        GPIO_InitStructure.Speed = GPIO_SPEED_FREQ_HIGH;    <span class="comment">//  高速</span></span><br><span class="line">        HAL_GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  程序延时 us , 必须在 72M 主频下使用</span></span><br><span class="line"><span class="comment">  * @param  us: &lt;= 4294967295</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Coarse_delay_us</span><span class="params">(<span class="type">uint32_t</span> us)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint32_t</span> delay = (HAL_RCC_GetHCLKFreq() / <span class="number">4000000</span> * us);</span><br><span class="line">    <span class="keyword">while</span> (delay--)</span><br><span class="line">&#123;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>OLED-IIC相关代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span><span class="comment">//这里只附赠相关c文件代码 详细完整代码见开源平台</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;i2c.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oledfont.h&quot;</span>          <span class="comment">//头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> CMD_Data[]=&#123;</span><br><span class="line"><span class="number">0xAE</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x40</span>, <span class="number">0xB0</span>, <span class="number">0x81</span>, <span class="number">0xFF</span>, <span class="number">0xA1</span>, <span class="number">0xA6</span>, <span class="number">0xA8</span>, <span class="number">0x3F</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0xC8</span>, <span class="number">0xD3</span>, <span class="number">0x00</span>, <span class="number">0xD5</span>, <span class="number">0x80</span>, <span class="number">0xD8</span>, <span class="number">0x05</span>, <span class="number">0xD9</span>, <span class="number">0xF1</span>, <span class="number">0xDA</span>, <span class="number">0x12</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">0xD8</span>, <span class="number">0x30</span>, <span class="number">0x8D</span>, <span class="number">0x14</span>, <span class="number">0xAF</span>&#125;;      <span class="comment">//初始化命令</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">WriteCmd</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">27</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">HAL_I2C_Mem_Write(&amp;hi2c1 ,<span class="number">0x78</span>,<span class="number">0x00</span>,I2C_MEMADD_SIZE_8BIT,CMD_Data+i,<span class="number">1</span>,<span class="number">0x100</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//向设备写控制命令</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_CMD</span><span class="params">(<span class="type">uint8_t</span> cmd)</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_I2C_Mem_Write(&amp;hi2c1 ,<span class="number">0x78</span>,<span class="number">0x00</span>,I2C_MEMADD_SIZE_8BIT,&amp;cmd,<span class="number">1</span>,<span class="number">0x100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//向设备写数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_DATA</span><span class="params">(<span class="type">uint8_t</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_I2C_Mem_Write(&amp;hi2c1 ,<span class="number">0x78</span>,<span class="number">0x40</span>,I2C_MEMADD_SIZE_8BIT,&amp;data,<span class="number">1</span>,<span class="number">0x100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化oled屏幕</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line">HAL_Delay(<span class="number">200</span>);</span><br><span class="line"> </span><br><span class="line">WriteCmd();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清屏</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_CMD(<span class="number">0xb0</span>+i);</span><br><span class="line">OLED_WR_CMD (<span class="number">0x00</span>); </span><br><span class="line">OLED_WR_CMD (<span class="number">0x10</span>); </span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)</span><br><span class="line">OLED_WR_DATA(<span class="number">0</span>);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//开启OLED显示    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_CMD(<span class="number">0X8D</span>);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_CMD(<span class="number">0X14</span>);  <span class="comment">//DCDC ON</span></span><br><span class="line">OLED_WR_CMD(<span class="number">0XAF</span>);  <span class="comment">//DISPLAY ON</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关闭OLED显示     </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_CMD(<span class="number">0X8D</span>);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_CMD(<span class="number">0X10</span>);  <span class="comment">//DCDC OFF</span></span><br><span class="line">OLED_WR_CMD(<span class="number">0XAE</span>);  <span class="comment">//DISPLAY OFF</span></span><br><span class="line">&#125;    </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Set_Pos</span><span class="params">(<span class="type">uint8_t</span> x, <span class="type">uint8_t</span> y)</span> </span><br><span class="line">&#123; </span><br><span class="line">OLED_WR_CMD(<span class="number">0xb0</span>+y);</span><br><span class="line">OLED_WR_CMD(((x&amp;<span class="number">0xf0</span>)&gt;&gt;<span class="number">4</span>)|<span class="number">0x10</span>);</span><br><span class="line">OLED_WR_CMD(x&amp;<span class="number">0x0f</span>);</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_On</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line"><span class="type">uint8_t</span> i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_CMD(<span class="number">0xb0</span>+i);    <span class="comment">//设置页地址（0~7）</span></span><br><span class="line">OLED_WR_CMD(<span class="number">0x00</span>);      <span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">OLED_WR_CMD(<span class="number">0x10</span>);      <span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)</span><br><span class="line">OLED_WR_DATA(<span class="number">1</span>); </span><br><span class="line">&#125; <span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">oled_pow</span><span class="params">(<span class="type">uint8_t</span> m,<span class="type">uint8_t</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> result=<span class="number">1</span>; </span><br><span class="line"><span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示2个数字</span></span><br><span class="line"><span class="comment">//x,y :起点坐标 </span></span><br><span class="line"><span class="comment">//len :数字的位数</span></span><br><span class="line"><span class="comment">//size:字体大小</span></span><br><span class="line"><span class="comment">//mode:模式0,填充模式;1,叠加模式</span></span><br><span class="line"><span class="comment">//num:数值(0~4294967295);   </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(<span class="type">uint8_t</span> x,<span class="type">uint8_t</span> y,<span class="type">unsigned</span> <span class="type">int</span> num,<span class="type">uint8_t</span> len,<span class="type">uint8_t</span> size2)</span></span><br><span class="line">&#123;         </span><br><span class="line"><span class="type">uint8_t</span> t,temp;</span><br><span class="line"><span class="type">uint8_t</span> enshow=<span class="number">0</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/oled_pow(<span class="number">10</span>,len-t<span class="number">-1</span>))%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(enshow==<span class="number">0</span>&amp;&amp;t&lt;(len<span class="number">-1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(x+(size2/<span class="number">2</span>)*t,y,<span class="string">&#x27; &#x27;</span>,size2);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> enshow=<span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"> OLED_ShowChar(x+(size2/<span class="number">2</span>)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size2); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//在指定位置显示一个字符,包括部分字符</span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="comment">//mode:0,反白显示;1,正常显示 </span></span><br><span class="line"><span class="comment">//size:选择字体 16/12 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(<span class="type">uint8_t</span> x,<span class="type">uint8_t</span> y,<span class="type">uint8_t</span> chr,<span class="type">uint8_t</span> Char_Size)</span></span><br><span class="line">&#123;      </span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> c=<span class="number">0</span>,i=<span class="number">0</span>;</span><br><span class="line">c=chr-<span class="string">&#x27; &#x27;</span>;<span class="comment">//得到偏移后的值</span></span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">128</span><span class="number">-1</span>)&#123;x=<span class="number">0</span>;y=y+<span class="number">2</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(Char_Size ==<span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">OLED_WR_DATA(F8X16[c*<span class="number">16</span>+i]);</span><br><span class="line">OLED_Set_Pos(x,y+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">OLED_WR_DATA(F8X16[c*<span class="number">16</span>+i+<span class="number">8</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">OLED_WR_DATA(F6x8[c][i]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//显示一个字符号串</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(<span class="type">uint8_t</span> x,<span class="type">uint8_t</span> y,<span class="type">uint8_t</span> *chr,<span class="type">uint8_t</span> Char_Size)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (chr[j]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;OLED_ShowChar(x,y,chr[j],Char_Size);</span><br><span class="line">x+=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">120</span>)&#123;x=<span class="number">0</span>;y+=<span class="number">2</span>;&#125;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示128x64 BMP图片</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Draw12864BMP</span><span class="params">(<span class="type">uint8_t</span> BMP[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//显示显示BMP图片128×64 </span></span><br><span class="line">    <span class="type">uint16_t</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="type">uint8_t</span> x,y;</span><br><span class="line">    <span class="keyword">for</span>(y=<span class="number">0</span>; y&lt;<span class="number">8</span>; y++)</span><br><span class="line">    &#123;</span><br><span class="line">        OLED_Set_Pos(<span class="number">0</span>,y);</span><br><span class="line">        <span class="keyword">for</span>(x=<span class="number">0</span>; x&lt;<span class="number">128</span>; x++)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> DISPLAY_MODE</span></span><br><span class="line">            OLED_WR_DATA(BMP[y]);</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">            OLED_WR_DATA(BMP[j++]);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示汉字</span></span><br><span class="line"><span class="comment">//hzk 用取模软件得出的数组</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowCHinese</span><span class="params">(<span class="type">uint8_t</span> x,<span class="type">uint8_t</span> y,<span class="type">uint8_t</span> no)</span></span><br><span class="line">&#123;          </span><br><span class="line"><span class="type">uint8_t</span> t,adder=<span class="number">0</span>;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_DATA(Hzk[<span class="number">2</span>*no][t]);</span><br><span class="line">adder+=<span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">OLED_Set_Pos(x,y+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_DATA(Hzk[<span class="number">2</span>*no+<span class="number">1</span>][t]);</span><br><span class="line">adder+=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="RTOS系统演示"><a href="#RTOS系统演示" class="headerlink" title="RTOS系统演示"></a>RTOS系统演示</h3><p><img src="/../pic/RTOS-CubeMX.png" alt="RTOS系统任务新建"></p><p>与正常HAL库开发一样，对所属引脚进行初始化配置，确定启用功能，在CubeMX中开启FreeRTOS操作系统，启动CMSISV1，定义第一个task，随后生成工程。在Keil的编译器中，打开freertos.c的文件，可以找到里面工程定义的task以及启动函数名。</p><p><img src="/../pic/RTOS-%E5%87%BD%E6%95%B0.png" alt="task内部函数书写"></p><p>于是出现了现象，其实是RGB三种颜色等轮番点亮。同时，这只是第一个task，如果有多个task该怎么办呢？其实就是在CubeMX中定义多个task，对于本题，比如ADC的task并进行串口发送，比较阈值的task。OLED的task等。最终会体现在RTOS的MX_FREERTOS_Init中。在本博客中就不放置效果了，就是一个RGB的三色的点亮。</p><h2 id="单片机使用教程——结果与测试分析"><a href="#单片机使用教程——结果与测试分析" class="headerlink" title="单片机使用教程——结果与测试分析"></a>单片机使用教程——结果与测试分析</h2><p>首先来展示一下PCB的渲染图：</p><p><img src="/../pic/%E6%AD%A3%E9%9D%A2PCB%E6%B8%B2%E6%9F%93%E5%9B%BE.jpg" alt="正面PCB渲染图"></p><p><img src="/../pic/%E8%83%8C%E9%9D%A2PCB%E6%B8%B2%E6%9F%93%E5%9B%BE.jpg" alt="背面PCB渲染图"></p><h3 id="嘉立创——测色丝印焊接视频及实物展示"><a href="#嘉立创——测色丝印焊接视频及实物展示" class="headerlink" title="嘉立创——测色丝印焊接视频及实物展示"></a>嘉立创——测色丝印焊接视频及实物展示</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=479884115&bvid=BV1RM411c7Qs&cid=1025056332&page=1"  scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><p>在本次博客中展示的PCB均为人工贴片，博主付不起高昂的SMT，也没有富哥可以帮我SMT，相比较人工贴片，反正都是样板，所以方便的多。但是博主并没有使用铁板烧，因为对他有点阴影，等我什么时候真开始有批量再考虑铁板烧吧，主要也是风枪用的挺顺手（滑稽.jpg</p><p><img src="/../pic/%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%BC%E5%90%88%E8%AE%BE%E8%AE%A1V1.0.jpg" alt="拓展板实物图——第一次"></p><p><img src="/../pic/%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%BC%E5%90%88%E8%AE%BE%E8%AE%A1.jpg" alt="拓展板实物图——第二次"></p><p><img src="/../pic/cover1.jpg" alt="核心板展示"></p><p><img src="/../pic/%E5%B7%A5%E7%A8%8B%E6%95%99%E8%82%B2%E5%AE%9E%E8%B7%B5.jpg" alt="呦吼~"></p><p>参加嘉立创彩色丝印内测，进行焊接，并加入亚克力板的外壳：</p><p><img src="/../pic/%E5%B7%A5%E7%A8%8B%E6%95%99%E8%82%B2%E5%AE%9E%E8%B7%B5-%E5%A4%96%E5%A3%B3%E7%89%88.jpg" alt="核心板效果图——外壳板"></p><p>最后，想在单片机这门课上，有些话想说：</p><p>​本课程选题源自于嘉立创的一次免费彩色丝印活动，起因于此，最终也终于此，这是我大学里面发布的第一个开源的项目，虽然是被迫开源，但我仍很知足，毕竟我没想到我大学里面也会发布开源项目。针对本次课程设计，几乎沉淀了近一年，从不懂原理图与PCB图之间的关系，从直插到0805的贴片，从0805到0603，从电烙铁到热风枪，这只是硬件侧面的设计；软件层面，从大二上加入电子信息创新基地，从第一次知道51单片机再到人生第一个32开发板，从开发板到核心板，从裸机开发到操作系统，我十分感谢D503电子信息创新基地、RoboMaster苍穹战队、工培中心、以及D603智能机器人技术与创新应用实验室，正是合肥工业大学现有的创新教育实践体系才可以使得本次的项目如期进行并完成开源，这是学生以校内资源为体系，完成学习实践的过程。虽然本人截止目前进入电创基地已经有一年了，这一年说长不长，说短不短，这一年培养了我对工程的整体的完整性以及整体工程的认知。</p><p>​从选题，需求分析，成本控制，项目管理，项目硬件设计，软件开发，成品发布，体现的是一个整个项目组的流程，最终的成品得到了深圳嘉立创的肯定，并按照要求实行开源。按照系里常说的一句话，培养了学生处理复杂工程应用的能力，方便学生更好的走进社会，融入社会。</p><p>​但对我来说，道路远不止如此，嵌入式的软硬件开发只是我的兴趣，我仍有自己的工作，仍有自己以后的道路，希望以后这可以成为副业而非主业。</p><p>​最后，前言万语汇成一句话，本课程可以理解为一年的沉淀而非一朝一夕，看似短暂的开发其实是经过了长时间的积淀。但是有得必有失，同学说的一句话非常好，我在学习焊接的时候，他们在学习高数。实践能力的提升代价是绩点的下降，不过我不后悔，我始终相信，实践是检验真理的唯一标准，而我缺失的理论终究也会像实践这样，通过摸索与钻研，补上曾经缺失的一课。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2023/02/22/hello-world/"/>
      <url>/2023/02/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p><img src="/../pic/oBfceH.jpg" alt="哈鲁哇"></p><p>合肥工业大学 张俸源 HFUT2020213395</p><p>特别要欢迎nyw鸽鸽捏)我的倪大爹 嘤嘤嘤</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=292908805&bvid=BV1kf4y1J7RS&cid=405785254&page=1"  scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
